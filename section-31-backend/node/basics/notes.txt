Node Introduction
    - What is Node ?
        - A JS runtime
            - That executes code outside of the browser
            - We can use the same js syntax to write server-side code without relying on python or ruby
    - What's it used for ?
        - Web Servers
        - Command Line Tools
        - Native Apps like vscode
        - Games and drone softwares etc etc
    - Node REPL(Read Evaluate Print Loop)
    - Node js vs client side js
        - we don't have access to browser stuff in node. window, document, dom api's etc
        - but it comes with a lot of built in modules which browsers dont have that helps us with accessing os and file system
    - just like window represent a whole global scope in browser, in node that is "global"
    - process
        - its an object, available in global scope
        - it includes info about and control over the current node.js process
        - it has a bunch of methods
            - version, release, cwd(), 
            - process.argv
                - returns an array containing the command line arguments passed when the node.js was launched. First it contains the node executable path, the second would be 
                  the js file we are executing and then additional command line arguments
    - filesytem - fs 
        -   It is a module and has a lot of methods
        -   All fs operations have a sync and async method 
        -   The asynchronous form always takes a completion callback as its last argument. 
            The arguments passed to the completion callback depend on the method, but the first argument is always reserved for an exception. 
            If the operation was completed successfully, then the first argument will be null or undefined.
        -   exception that occur using sync are thrown immediately
        -   the sync version will block all the operations in the rest of the process before compeliting this
        -   this module is to be included 